function [ ecoOutput ] = economic_analysis( SimParam, BattParam, InvParam, ecoParam, InData, SimOutput)
%ECONOMICANALYSIS The economic implications for every simulated solution
%   O(n^2) loops through every solution of the simulation to make an
%   economic solution space. Changing the SimPar will be sufficient to
%   calculate a different scope of solutions

[nBattEmployed, investmentCost, operationMaintenanceReplacementCost, balanceOfSystemCost,...
battCostTot, pvCostTot, inverterCostTot, netPresentCost, levelizedCostOfEnergy]...
= deal(zeros(SimParam.nPvSteps, SimParam.nBattSteps));

capitalRecoveryFactor = (ecoParam.interestRate...
      * ((1 + ecoParam.interestRate)...
      ^ ecoParam.plantLifetime))...
      / (((1 + ecoParam.interestRate)...
      ^ ecoParam.plantLifetime) - 1);

for iPv = 1 : SimParam.nPvSteps 
    
    iPvKw = SimParam.pv_step_to_kw(iPv - 1);
    
    for iBatt = 1 : SimParam.nBattSteps
        
        jBattKwh = SimParam.batt_step_to_kwh(iBatt - 1);

        battCostTot(iPv, iBatt) = ecoParam.battCostKwh * jBattKwh...
                                    + ecoParam.battCostFixed;            

        loadPeakKw = max(InData.load);                                   
        
        %inverter is designed on the peak power value
        inverterCostTot(iPv, iBatt) = (loadPeakKw/InvParam.efficiency)...
                                        * ecoParam.inverterCostKw;                                       

        pvCostTot(iPv, iBatt) = ecoParam.pvCostKw...
                                  * iPvKw;
        
        % cost of Balance of System (BoS) and Installation
        balanceOfSystemCost(iPv, iBatt) = ecoParam.installBalanceOfSystemCost...
                                        * (battCostTot(iPv, iBatt)...
                                        + inverterCostTot(iPv, iBatt)...
                                        + pvCostTot(iPv, iBatt));              

        investmentCost(iPv,iBatt) = pvCostTot(iPv, iBatt) ...
                                     + battCostTot(iPv, iBatt) ...
                                     + inverterCostTot(iPv, iBatt) ...
                                     + balanceOfSystemCost(iPv, iBatt);    
        
        operationAndManagementCost = ecoParam.operationMaintenanceCostKw...
                                   * iPvKw;
                            
        % batteries should be replaced after this number of years
        battOperationalYears = 1/SimOutput.sumPartialCyclesUsed(iPv,iBatt)...
                             * InData.nYears; 
        
        if battOperationalYears > BattParam.maxOperationalYears;
           battOperationalYears = BattParam.maxOperationalYears;
        end
        
        nBattEmployed(iPv,iBatt) = ceil(ecoParam.plantLifetime ...
                                  / battOperationalYears);

        nextBatteryReplacementYear = battOperationalYears;
        for k = 1 : ecoParam.plantLifetime
            if k > nextBatteryReplacementYear
                
                operationMaintenanceReplacementCost(iPv,iBatt)...
                                    = operationMaintenanceReplacementCost(iPv,iBatt)...
                                    + battCostTot(iPv, iBatt)...
                                    / ((1 + ecoParam.interestRate)...
                                    ^ battOperationalYears);      
                                    % computing present values of battery
                                    
                % batteries are replaced and new replacement year is set
                nextBatteryReplacementYear = nextBatteryReplacementYear ...
                                           + battOperationalYears;         
            end
            
            % computing present values of Operations & Maintenance
            operationMaintenanceReplacementCost(iPv,iBatt) ...
                                    = operationMaintenanceReplacementCost(iPv,iBatt)...
                                    + operationAndManagementCost ...
                                    / ((1 + ecoParam.interestRate)^k);     
        end
        operationMaintenanceReplacementCost(iPv,iBatt) ...
                                = operationMaintenanceReplacementCost(iPv,iBatt)...
                                - battCostTot(iPv, iBatt)...
                                * ( (battOperationalYears ...
                                - ecoParam.plantLifetime)...
                                / battOperationalYears ) ...
                                / (1 + ecoParam.interestRate)...
                                ^ (ecoParam.plantLifetime);
                                % salvage due to battery life i.e. estimating
                                % how much the batteries are worth after the
                                % lifetime of the system
                            
        % Adding inverter net present cost
        operationMaintenanceReplacementCost(iPv,iBatt) ...
                                = operationMaintenanceReplacementCost(iPv,iBatt)...
                                + inverterCostTot(iPv, iBatt)... 
                                / ((1 + ecoParam.interestRate)...
                                ^ (ecoParam.plantLifetime / 2));          
        
        
netPresentCost(iPv, iBatt) = investmentCost(iPv, iBatt)...
                           + operationMaintenanceReplacementCost(iPv, iBatt);                               

levelizedCostOfEnergy(iPv, iBatt) = (netPresentCost(iPv, iBatt) ...
                   * capitalRecoveryFactor)...
                   ./ (sum(InData.load, 2)...
                   - SimOutput.lossOfLoadTot(iPv, iBatt));                   
 
    end
end

% Levelized Cost of Energy i.e. cost per kWh of building and operating the 
% plant over an assumed life cycle. This is important as we want it to be competitive
% with the grid LCoE. See eqn. (7.6) in thesis Stefano Mandelli.

ecoOutput = EconomicAnalysisOutputs(investmentCost,... 
                                      netPresentCost,... 
                                      levelizedCostOfEnergy,...
                                      battCostTot,...
                                      inverterCostTot,...
                                      pvCostTot,...
                                      balanceOfSystemCost,...
                                      operationMaintenanceReplacementCost,...     
                                      capitalRecoveryFactor,...
                                      nBattEmployed);


end

