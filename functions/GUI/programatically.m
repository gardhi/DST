function programatically

% This script is structured in the following way
% 1. Initialization
% 2. Callbacks
% 3. Help Functions
    
    
    
    
    
lFigWidth = 500; lFigHeight = 900;
f = figure('Visible','off','Units','pixels',...
           'Position',[340,80,lFigWidth,lFigHeight],'menubar','none');

set = struct;
presetFiles = '';
presetList = '';
       
% Margin metric
lMargin = 10;
lAlignEditText = 22;
% Panel Metrics
lNextRow = 45;
lMultiLineAdjust3 = 10;
lMultiLineAdjust2 = 5;
lPanelEdge = 67;
lPanelWidth = lFigWidth*0.35;
% Text metrics
lTextWidth = 80;
lTextHeight = 40;

% Title
lTitleHeight = 30;
lTitleWidth = 300;
lTitleStartY = lFigHeight - lMargin- lTitleHeight;
uicontrol(f,'Style','text','String','Development Support Tool',...
           'Units','pixels','HorizontalAlignment','Left',...
           'FontSize',16,...
           'Position', [lMargin, lTitleStartY,...
            lTitleWidth, lTitleHeight]);



%% Presets
% contructs a uicontrol popup menu which keep track of .mat files in the
% functions/GUI/presets folder. Can save and delete files with the GUI.

lPresetX = lPanelWidth*2+lMargin*1.7;
lPresetWidth = lPanelWidth*0.7;
lPresetTitleHeight = 0.7*lTitleHeight;
lPresetTitleY = lTitleStartY - lMargin- lPresetTitleHeight;

uicontrol(f, 'Style','text','String','Presets:',...
             'Units','pixels',...
             'HorizontalAlignment','Left',...
             'Fontsize',14,...
             'Position',[lPresetX,lPresetTitleY,...
             lPresetWidth,lPresetTitleHeight]);

lPresetMenuHeight = 18;
lPresetsMenuY = lPresetTitleY - lMargin - lPresetMenuHeight;
h.PresetsMenu = uicontrol(f, 'Style','popup',...
                         'String',presetList,...
                         'Units','pixels',...
                         'Position',[lPresetX,...
                         lPresetsMenuY, ...
                         lPresetWidth, lPresetMenuHeight],...
                         'Callback', @presetsMenu_Callback);
              
lNewPresetHeaderY = lPresetsMenuY - lMargin*1.5 - lPresetMenuHeight;
uicontrol(f, 'Style','text','String','New Preset:',...
             'Units','pixels',...
             'HorizontalAlignment','Left',...
             'Fontsize',12,...
             'Position',[lPresetX,lNewPresetHeaderY,...
             lPresetWidth,lPresetTitleHeight]);                     

lNewPresetNameY = lNewPresetHeaderY - lPresetMenuHeight - lMargin;
h.NewPresetName = uicontrol(f,'Style','edit','String','default',...
                           'Units','pixels',...
                           'Position',[lPresetX,lNewPresetNameY,...
                           lPresetWidth,lPresetMenuHeight],...
                           'HorizontalAlignment','Left');
                       
lSavePresetBtnY = lNewPresetNameY - lPresetMenuHeight - lMargin;
h.SavePresetBtn = uicontrol(f, 'Style', 'pushbutton', 'String' , 'Save',...
                              'Units', 'pixels',...
                              'Position', [lPresetX, lSavePresetBtnY,...
                              lPresetWidth, lPresetMenuHeight],...
                              'Callback', @savePresetBtn_Callback,...
                              'BackgroundColor',[206 255 213]/255);
 
lDeletePresetBtnY = lSavePresetBtnY - lPresetMenuHeight - lMargin;
h.DeletePresetBtn = uicontrol(f, 'Style', 'pushbutton', 'String' , 'Delete',...
                              'Units', 'pixels',...
                              'Position', [lPresetX, lDeletePresetBtnY,...
                              lPresetWidth, lPresetMenuHeight],...
                              'Callback', @deletePresetBtn_Callback,...
                              'BackgroundColor',[255 206 206]/255);
                          

update_presets_menu
  
%% Calculation Control

lSimControlTitleHeight = 2*lPresetTitleHeight;
lSimControlTitleY = lDeletePresetBtnY - lSimControlTitleHeight- lMargin;
uicontrol(f, 'Style','text','String','Run Calculations:',...
             'Units','pixels',...
             'HorizontalAlignment','Left',...
             'Fontsize',14,...
             'Position',[lPresetX,lSimControlTitleY,...
             lPresetWidth,lSimControlTitleHeight]);

lRunSapvSimBtnHeight = 40;
lRunSapvSimBtnY = lSimControlTitleY - lRunSapvSimBtnHeight - 1.5*lMargin;
h.RunSapvSimBtn = uicontrol(f, 'Style', 'pushbutton', 'String' , 'Run Sapv Simulation',...
                              'Units', 'pixels',...
                              'Position', [lPresetX, lRunSapvSimBtnY,...
                              lPresetWidth, lRunSapvSimBtnHeight],...
                              'Callback', @runSapvSim_Callback,...
                              'BackgroundColor',[252 244 200]/255);
        
%% Panels and parameter Input
% this entire section is an initialization of the panels and their texts
% and edit fields. 
% Worth noting: 
% - The metrics are connected to eachother, so
% that you dont have to change many metrics if you want to change
% - all ui controls have handles that are found in the global 'h' struct
% (RECOMENDED: do not change the structure of the panels and title.)
% SimPar Panel
lNumberOfSimPar = 9;
lSimParPanelHeight = lNextRow*(lNumberOfSimPar)+lPanelEdge;
lSimParPanelY = lTitleStartY - lMargin- lSimParPanelHeight;

h.SimParamPanel = uipanel(f,'Title','Sim Parameters',...
                'Units','pixels',...
                'Position',[lMargin,lSimParPanelY ,lPanelWidth,lSimParPanelHeight]);

lTextY = lSimParPanelHeight-lPanelEdge;
lTextX = lMargin;

lEditWidth = 0.3*lPanelWidth;
lEditHeight = 18;
lEditX = lPanelWidth-lMargin-lEditWidth;
lEditY = lTextY+lAlignEditText;

% PV
uicontrol(h.SimParamPanel,'Style','text','String','PV start [kW]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');
h.PvStart = uicontrol(h.SimParamPanel,'Style','edit','String',set.pvStartKw,...
                    'Units','pixels',...
                    'Position',[lEditX,lEditY,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');
                
uicontrol(h.SimParamPanel,'Style','text','String','PV stop [kW]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY - lNextRow,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');
h.PvStop = uicontrol(h.SimParamPanel,'Style','edit','String',set.pvStopKw,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY - lNextRow,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');
                               
uicontrol(h.SimParamPanel,'Style','text','String','PV step [kW]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY - lNextRow*2,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');
h.PvStep = uicontrol(h.SimParamPanel,'Style','edit','String',set.pvStepKw,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY - lNextRow*2,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');  

% Batt
uicontrol(h.SimParamPanel,'Style','text','String','Batt start [kWh]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY - lNextRow*3,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');
h.BattStart = uicontrol(h.SimParamPanel,'Style','edit','String',set.battStartKwh,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY - lNextRow*3,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');  

                
uicontrol(h.SimParamPanel,'Style','text','String','Batt stop [kWh]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY - lNextRow*4,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');
h.BattStop = uicontrol(h.SimParamPanel,'Style','edit','String',set.battStopKwh,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY - lNextRow*4,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');

uicontrol(h.SimParamPanel,'Style','text','String','Batt step [kWh]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY - lNextRow*5,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');
h.BattStep = uicontrol(h.SimParamPanel,'Style','edit','String',set.battStepKwh,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY - lNextRow*5,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');

% LLP
uicontrol(h.SimParamPanel,'Style','text','String','Llp Acceptance [%]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY - lNextRow*6,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');
h.LlpAccept = uicontrol(h.SimParamPanel,'Style','edit','String',set.llpAccept,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY - lNextRow*6,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');

uicontrol(h.SimParamPanel,'Style','text','String','LLP start [%]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY - lNextRow*7,...
                     lTextWidth,lTextHeight],...
                     'HorizontalAlignment', 'Left');
h.LlpStart = uicontrol(h.SimParamPanel,'Style','edit','String',set.llpStart,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY - lNextRow*7,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');
           
uicontrol(h.SimParamPanel,'Style','text','String','LLP stop [%]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY - lNextRow*8,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');
h.LlpStop = uicontrol(h.SimParamPanel,'Style','edit','String',set.llpStop,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY - lNextRow*8,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');

uicontrol(h.SimParamPanel,'Style','text','String','LLP step [%]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY - lNextRow*9,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');
h.LlpStep = uicontrol(h.SimParamPanel,'Style','edit','String',set.llpStep,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY - lNextRow*9,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');


% % Battery Parameter Panel
lNumberOfBattPar = 6; 
lBattParPanelHeight = lNextRow*(lNumberOfBattPar)+20;
lBattPanelStartY = lSimParPanelY - lBattParPanelHeight;
h.BattParamPanel = uipanel(f,'Title','Battery Parameters',...
                  'Units','pixels',...
                  'Position',[lMargin,lBattPanelStartY,...
                  lPanelWidth, lBattParPanelHeight]);   
 
lTextY = lBattParPanelHeight-lPanelEdge;
lEditY = lTextY + lAlignEditText;
              
              
uicontrol(h.BattParamPanel,'Style','text','String','Min State Of Charge [%]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');               
h.MinStateOfCharge = uicontrol(h.BattParamPanel,'Style','edit','String',...
                    set.minStateOfCharge,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');
          
uicontrol(h.BattParamPanel,'Style','text','String','Initial State Of Charge [%]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY- lNextRow + lMultiLineAdjust2,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');               
h.InitialStateOfCharge = uicontrol(h.BattParamPanel,'Style','edit','String',...
                    set.initialStateOfCharge,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY - lNextRow,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');

uicontrol(h.BattParamPanel,'Style','text','String','Charging Efficiency [%]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY- lNextRow*2 + lMultiLineAdjust2,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');               
h.ChargingEfficiency = uicontrol(h.BattParamPanel,'Style','edit','String',...
                    set.chargingEfficiency,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY - lNextRow*2,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');

uicontrol(h.BattParamPanel,'Style','text','String','Discharging Efficiency [%]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY- lNextRow*3 + lMultiLineAdjust2,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');               
h.DischargingEfficiency = uicontrol(h.BattParamPanel,'Style','edit','String',...
                    set.dischargingEfficiency,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY - lNextRow*3,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');

uicontrol(h.BattParamPanel,'Style','text','String','Power-Energy Ratio',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY- lNextRow*4 + lMultiLineAdjust2,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');               
h.PowerEnergyRatio = uicontrol(h.BattParamPanel,'Style','edit','String',...
                    set.powerEnergyRatio,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY - lNextRow*4,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');
                
uicontrol(h.BattParamPanel,'Style','text','String','Max Operational Years',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY- lNextRow*5 + lMultiLineAdjust2,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');               
h.MaxOperationalYears = uicontrol(h.BattParamPanel,'Style','edit','String',...
                    set.maxOperationalYears,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY - lNextRow*5,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');
                


% % Economic Parameters Panel
lNumberOfEcoPar = 8;
lEcoParPanelHeight = lNextRow*(lNumberOfEcoPar)+lPanelEdge;
lEcoParPanelY = lTitleStartY - lMargin- lEcoParPanelHeight;
h.EcoParamPanel = uipanel(f,'Title','Economic Parameters',...
                  'Units','pixels',...
                  'Position',[lMargin + lPanelWidth,...
                  lEcoParPanelY,lPanelWidth, lEcoParPanelHeight]);
              
lTextY = lEcoParPanelHeight-lPanelEdge;
lEditY = lTextY + lAlignEditText;

uicontrol(h.EcoParamPanel,'Style','text','String','Budget',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');               
h.Budget= uicontrol(h.EcoParamPanel,'Style','edit','String',set.budget,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');
                

uicontrol(h.EcoParamPanel,'Style','text','String','PV cost [/kW]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY-lNextRow,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');               
h.PvCost= uicontrol(h.EcoParamPanel,'Style','edit','String',set.pvCostKw,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY-lNextRow,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');
                

uicontrol(h.EcoParamPanel,'Style','text','String','Batt cost [/kWh]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY-lNextRow*2,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');               
h.BattCost= uicontrol(h.EcoParamPanel,'Style','edit','String',set.battCostKwh,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY-lNextRow*2,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');
                

uicontrol(h.EcoParamPanel,'Style','text','String','Batt cost fixed',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY-lNextRow*3,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');               
h.BattCostFix= uicontrol(h.EcoParamPanel,'Style','edit','String',set.battCostFixed,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY-lNextRow*3,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');
                

uicontrol(h.EcoParamPanel,'Style','text','String','Inverter Cost [\kW]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY-lNextRow*4 + lMultiLineAdjust2,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');               
h.InverterCost= uicontrol(h.EcoParamPanel,'Style','edit',...
                    'String',set.inverterCostKw,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY-lNextRow*4,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');
                

uicontrol(h.EcoParamPanel,'Style','text','String','Operation and Maintenance cost [/kW]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY-lNextRow*5 + lMultiLineAdjust3,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');               
h.OperationMaintenanceCost= uicontrol(h.EcoParamPanel,'Style','edit',...
                    'String',set.operationMaintenanceCostKw,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY-lNextRow*5,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');
                

uicontrol(h.EcoParamPanel,'Style','text','String','Installation and Balance of System [%]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY-lNextRow*6 + lMultiLineAdjust3 ,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');               
h.InstallBalanceOfSystemCost= uicontrol(h.EcoParamPanel,'Style','edit',...
                    'String',set.installBalanceOfSystemCost,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY-lNextRow*6,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');
                
                
uicontrol(h.EcoParamPanel,'Style','text','String','Plant Lifetime [years]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY-lNextRow*7 + lMultiLineAdjust2,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');               
h.PlantLifetime = uicontrol(h.EcoParamPanel,'Style','edit',...
                    'String',set.plantLifetime,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY-lNextRow*7,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');
                
uicontrol(h.EcoParamPanel,'Style','text','String','Interest rate [%]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY-lNextRow*8,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');               
h.InterestRate = uicontrol(h.EcoParamPanel,'Style','edit','String',set.interestRate,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY-lNextRow*8,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');
                
                
                
                
% % PV Parameters Panel
lNumberOfPvPar = 5;
lPvParPanelHeight = lNextRow*(lNumberOfPvPar)+ 12;
lPvPanelStartY = lEcoParPanelY - lPvParPanelHeight;
h.PvParamPanel = uipanel(f,'Title','PV Parameters',...
                  'Units','pixels',...
                  'Position',[lMargin + lPanelWidth,...
                  lPvPanelStartY,lPanelWidth, lPvParPanelHeight]);
              
lTextY = lPvParPanelHeight-lPanelEdge;
lEditY = lTextY + lAlignEditText;

uicontrol(h.PvParamPanel,'Style','text','String','Balance Of System [%]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');               
h.BalanceOfSystem = uicontrol(h.PvParamPanel,'Style','edit','String',...
                    set.balanceOfSystem,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');
                
uicontrol(h.PvParamPanel,'Style','text','String','Nominal Ambient Temperature [C]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY- lNextRow+ lMultiLineAdjust3,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');               
h.NominalAmbientTemp = uicontrol(h.PvParamPanel,'Style','edit','String',...
                    set.nominalAmbientTemperatureC,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY - lNextRow,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');

uicontrol(h.PvParamPanel,'Style','text','String','Nominal Cell Temperature [C]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY- lNextRow*2 + lMultiLineAdjust2,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');               
h.NominalCellTemp = uicontrol(h.PvParamPanel,'Style','edit','String',...
                    set.nominalCellTemperatureC,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY - lNextRow*2,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');

uicontrol(h.PvParamPanel,'Style','text','String','Nominal Irradiation [kW/m^2]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY- lNextRow*3 + lMultiLineAdjust3,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');               
h.NominalIrradiation = uicontrol(h.PvParamPanel,'Style','edit','String',...
                    set.nominalIrradiation,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY - lNextRow*3,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');


uicontrol(h.PvParamPanel,'Style','text','String','Power Derate Due Temp [/C]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY- lNextRow*4 + lMultiLineAdjust2,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');               
h.PowerDerateDueTemp = uicontrol(h.PvParamPanel,'Style','edit','String',...
                    set.powerDerateDueTemperature,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY - lNextRow*4,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');


% Inverter Parameter Panel
lInvParPanelHeight = lNextRow+ lMargin*2;
lInvPanelStartY = lPvPanelStartY - lInvParPanelHeight;
h.InvParamPanel = uipanel(f,'Title','Inverter Parameters',...
                  'Units','pixels',...
                  'Position',[lMargin+ lPanelWidth,lInvPanelStartY,...
                  lPanelWidth, lInvParPanelHeight]);   
 
lTextY = lInvParPanelHeight-lPanelEdge;
lEditY = lTextY + lAlignEditText;

uicontrol(h.InvParamPanel,'Style','text','String','Efficiency [%]',...
                    'Units','pixels',...
                    'Position',[lTextX,lTextY,...
                     lTextWidth,lTextHeight],...
                    'HorizontalAlignment', 'Left');               
h.InvEfficiency = uicontrol(h.InvParamPanel,'Style','edit','String',...
                    set.invEfficiency,...
                    'Units','pixels',...
                    'Position',[lEditX, lEditY,...
                     lEditWidth,lEditHeight],...
                    'HorizontalAlignment','Center');            

% InData Panel
lInDataPanelHeight = lNextRow*2-10;
lNextRow = 0.65*lNextRow
lInDataPanelWidth = lFigWidth-lMargin*2;
lInDataPanelY = lBattPanelStartY - lInDataPanelHeight;
h.InDataPanel = uipanel(f,'Title','Input Data Files',...
                  'Units','pixels',...
                  'Position',[lMargin,lInDataPanelY,...
                   lInDataPanelWidth , lInDataPanelHeight]);   

lInDataTextWidth = 0.2*lInDataPanelWidth;           
lEditX = lMargin + lInDataTextWidth;
lInDataEditWidth = 0.26*lInDataPanelWidth;

%LoadProfileData text and edit
lLoadProfileDataTextY = lInDataPanelHeight - lPanelEdge+5;
lLoadProfileDataEditY = lLoadProfileDataTextY + lAlignEditText;
uicontrol(h.InDataPanel,'Style', 'text', 'String', 'Load Data Filename',...
                        'Units', 'pixels', ...
                        'Position', [lMargin, lLoadProfileDataTextY,...
                                     lInDataTextWidth, lTextHeight],...
                        'HorizontalAlignment','Left');
h.LoadProfileData = uicontrol(h.InDataPanel,'Style','edit','String',...
                    set.LoadProfileData,...
                    'Units','pixels',...
                    'Position',[lEditX, lLoadProfileDataEditY,...
                                lInDataEditWidth,lEditHeight],...
                    'HorizontalAlignment','Left');

%IrradiationDataText and edit
lIrradiationDataTextY = lLoadProfileDataTextY - lNextRow;
lIrradiationDataEditY = lLoadProfileDataEditY - lNextRow;
uicontrol(h.InDataPanel,'Style', 'text', 'String', 'Temperature Data Filename',...
                        'Units', 'pixels', ...
                        'Position', [lMargin, lIrradiationDataTextY + lMultiLineAdjust2,...
                                     lInDataTextWidth, lTextHeight],...
                        'HorizontalAlignment', 'Left')
h.IrradiationData = uicontrol(h.InDataPanel,'Style','edit','String',...
                    set.IrradiationData,...
                    'Units','pixels',...
                    'Position',[lEditX, lIrradiationDataEditY,...
                                lInDataEditWidth,lEditHeight],...
                    'HorizontalAlignment','Left');

%Temperature text and edit
lInDataNextColumnX = 0.5*lInDataPanelWidth;
lEditX = lInDataNextColumnX + lMargin + lInDataTextWidth;
uicontrol(h.InDataPanel,'Style', 'text', 'String', 'Temperature Data',...
                        'Units', 'pixels', ...
                        'Position', [lInDataNextColumnX, lLoadProfileDataTextY,...
                                     lInDataTextWidth, lTextHeight],...
                    'HorizontalAlignment','Left');
h.TemperatureData = uicontrol(h.InDataPanel,'Style','edit','String',...
                    set.TemperatureData,...
                    'Units','pixels',...
                    'Position',[lEditX,lLoadProfileDataEditY,...
                                lInDataEditWidth,lEditHeight],...
                    'HorizontalAlignment','Left');

%DataSetFolderName text and edit
uicontrol(h.InDataPanel,'Style', 'text', 'String', 'Data Set',...
                        'Units', 'pixels', ...
                        'Position', [lInDataNextColumnX, lIrradiationDataTextY,...
                                     lInDataTextWidth, lTextHeight],...
                        'HorizontalAlignment', 'Left')
h.DataSetFolderName = uicontrol(h.InDataPanel,'Style','edit','String',...
                    set.DataSetFolderName,...
                    'Units','pixels',...
                    'Position',[lEditX, lIrradiationDataEditY,...
                                lInDataEditWidth,lEditHeight],...
                    'HorizontalAlignment','Left');
                
f.Visible = 'on';

%% Callbacks

    % saves the edit fields to a new .mat file
    function savePresetBtn_Callback(src, eventdata)
        set.pvStartKw = h.PvStart.String;
        set.pvStopKw = h.PvStop.String;
        set.pvStepKw = h.PvStep.String;
        set.battStartKwh = h.BattStart.String;
        set.battStopKwh = h.BattStop.String;
        set.battStepKwh = h.BattStep.String;
        set.llpAccept = h.LlpAccept.String;
        set.llpStart = h.LlpStart.String;
        set.llpStop = h.LlpStop.String;
        set.llpStep = h.LlpStep.String;          
        set.budget = h.Budget.String;
        set.pvCostKw = h.PvCost.String ;          
        set.battCostKwh = h.BattCost.String;             
        set.battCostFixed = h.BattCostFix.String;             
        set.inverterCostKw = h.InverterCost.String;          
        set.operationMaintenanceCostKw = h.OperationMaintenanceCost.String;           
        set.installBalanceOfSystemCost = h.InstallBalanceOfSystemCost.String;             
        set.plantLifetime = h.PlantLifetime.String;               
        set.interestRate = h.InterestRate.String;            
        set.balanceOfSystem = h.BalanceOfSystem.String;             
        set.nominalAmbientTemperatureC = h.NominalAmbientTemp.String;              
        set.nominalCellTemperatureC = h.NominalCellTemp.String;              
        set.nominalIrradiation = h.NominalIrradiation.String;             
        set.powerDerateDueTemperature = h.PowerDerateDueTemp.String;              
        set.minStateOfCharge = h.MinStateOfCharge.String;            
        set.initialStateOfCharge = h.InitialStateOfCharge.String;            
        set.chargingEfficiency = h.ChargingEfficiency.String;             
        set.dischargingEfficiency = h.DischargingEfficiency.String;             
        set.powerEnergyRatio = h.PowerEnergyRatio.String;              
        set.maxOperationalYears = h.MaxOperationalYears.String;               
        set.invEfficiency = h.InvEfficiency.String;
        set.LoadProfileData = h.LoadProfileData.String;
        set.IrradiationData = h.IrradiationData.String;
        set.TemperatureData = h.TemperatureData.String;
        set.DataSetFolderName = h.DataSetFolderName;
       
        presetsPath = get_presets_path;
        fullpath = strcat(presetsPath, h.NewPresetName.String);
        save(fullpath, 'set')
        h.PresetsMenu.String{length(h.PresetsMenu.String)+1} =...
            strcat(h.NewPresetName.String, '.mat');
        h.PresetsMenu.Value = length(h.PresetsMenu.String);
       
        update_presets_menu

    end
    
    function deletePresetBtn_Callback(src, eventdata)

       presetNames = h.PresetsMenu.String;
       preset = presetNames(h.PresetsMenu.Value);

       presetsPath = get_presets_path;
       fullpath = strcat(presetsPath, preset{1});
       
       delete(fullpath)
       
       update_presets_menu
       update_edits
       
    end

    % Calls when selecting in the presetsMenu popup
    % Preset -> Set
    function presetsMenu_Callback(src, eventdata)
       presetNames = src.String;

       preset = presetNames(src.Value);

       presetsPath = get_presets_path;
       fullpath = strcat(presetsPath, preset{1});
       set = importdata(fullpath);
       update_edits
       
    end
    
    function runSapvSim_Callback(src, eventdata)
        
        
        
        
    end
    
%% Help functions
    
    % Set -> Edits
    % Update the edit fields to match the 'set' variable
    function update_edits
        h.PvStart.String = set.pvStartKw;
        h.PvStop.String = set.pvStopKw;
        h.PvStep.String = set.pvStepKw;
        h.BattStart.String = set.battStartKwh;
        h.BattStop.String = set.battStopKwh;
        h.BattStep.String = set.battStepKwh;
        h.LlpAccept.String = set.llpAccept;
        h.LlpStart.String = set.llpStart;
        h.LlpStop.String = set.llpStop;
        h.LlpStep.String = set.llpStep;          
        h.Budget.String = set.budget;
        h.PvCost.String = set.pvCostKw;          
        h.BattCost.String = set.battCostKwh;             
        h.BattCostFix.String= set.battCostFixed;             
        h.InverterCost.String = set.inverterCostKw;          
        h.OperationMaintenanceCost.String = set.operationMaintenanceCostKw;           
        h.InstallBalanceOfSystemCos.String = set.installBalanceOfSystemCost;             
        h.PlantLifetime.String = set.plantLifetime;               
        h.InterestRate.String = set.interestRate;            
        h.BalanceOfSystem.String = set.balanceOfSystem;             
        h.NominalAmbientTemp.String = set.nominalAmbientTemperatureC;              
        h.NominalCellTemp.String = set.nominalCellTemperatureC;              
        h.NominalIrradiation.String = set.nominalIrradiation;             
        h.PowerDerateDueTemp.String = set.powerDerateDueTemperature;              
        h.MinStateOfCharge.String = set.minStateOfCharge;            
        h.InitialStateOfCharge.String = set.initialStateOfCharge;            
        h.ChargingEfficiency.String = set.chargingEfficiency;             
        h.DischargingEfficiency.String = set.dischargingEfficiency;             
        h.PowerEnergyRatio.String = set.powerEnergyRatio;              
        h.MaxOperationalYears.String = set.maxOperationalYears;               
        h.InvEfficiency.String = set.invEfficiency;
        h.LoadProfileData.String = set.LoadProfileData;
        h.IrradiationData.String = set.IrradiationData;
        h.TemperatureData.String = set.TemperatureData;
        h.DataSetFolderName = set.DataSetFolderName;
    end
    
    % Directory -> Presets
    % Looks in directory and makes a list of the filenames, puts the list
    % into the presets menu popup and sets either the currently displayed
    % preset or the default preset in the 'set' variable given that the
    % displayed preset still exist
    function update_presets_menu
        valueNotSet = true;
        presetFiles = dir('functions/GUI/presets/*.mat');
        presetList = cell(1,length(presetFiles));
        for j = 1:length(presetList)
            presetList{j} = presetFiles(j).name;
        end

        % set the value (the displayed string in the menu)
        % This will trigger if the current displaed preset exists as a file
        if  isempty(h.PresetsMenu.String) == false
            currentDisplay = h.PresetsMenu.String(h.PresetsMenu.Value);
            currentIsInPresetList = strcmp(presetList,currentDisplay);
            if any(currentIsInPresetList)
                i = find(currentIsInPresetList);
                h.PresetsMenu.Value = i;
                valueNotSet = false;
            end
        end
        
        defaultIsInPresetList = strcmp(presetList,'default.mat');
        if any(defaultIsInPresetList) && valueNotSet
            i = find(defaultIsInPresetList);
            h.PresetsMenu.Value = i;
            valueNotSet = false;
        end

        % default was neither in the list nor in directory, we need to make
        % a new default file defined inside this script. 
            % comment: This is not
            % possible through the GUI but may occur if someone delete the file
            % manually, can be nice if one has rewritten the default file to
            % something very incorrect and wish to reset to harcoded
            % default
        if valueNotSet
            set = init_default_set_values;
            update_edits
            h.NewPresetName.String = 'default';
            
            presetsPath = get_presets_path;
            fullpath = strcat(presetsPath, h.NewPresetName.String);
            save(fullpath, 'set')
        else
            h.PresetsMenu.String = presetList;
            presetsMenu_Callback(h.PresetsMenu)
        end
    end
        
    % Initialise set with some default values
    % Default -> Set
    function set = init_default_set_values
        % DEFAULT values 
        % Simulation Default Parameters:
        set.pvStartKw = '100';
        set.pvStopKw = '200';
        set.pvStepKw = '10';
        set.battStartKwh = '1200';
        set.battStopKwh = '1300';
        set.battStepKwh = '10';
        set.llpAccept = '5';
        set.llpStart = '1';
        set.llpStop = '80';
        set.llpStep = '5';

        % Economic Default Parameters
        set.budget = '1500000';
        set.pvCostKw = '1000';
        set.battCostKwh = '140';              
        set.battCostFixed = '0';             
        set.inverterCostKw = '500';          
        set.operationMaintenanceCostKw = '50';
        set.installBalanceOfSystemCost = '2';%
        set.plantLifetime = '20';           
        set.interestRate = '6';%  

        %PV Default Parameters
        set.balanceOfSystem = '85';  %             
        set.nominalAmbientTemperatureC = '20';    % Nominal ambient test-temperature of the panels [C]
        set.nominalCellTemperatureC = '47';        % Nominal Operating Cell Temperature [C]
        set.nominalIrradiation = '0.8';           % Irradiation at nominal operation [kW / m^2]
        set.powerDerateDueTemperature = '0.004';  % Derating of panel's power due to temperature [/C]

        % Battery Default Parameters
        set.minStateOfCharge = '40'; %            
        set.initialStateOfCharge = '100'; %;             
        set.chargingEfficiency = '85'; % 
        set.dischargingEfficiency = '90'; %
        set.powerEnergyRatio = '0.5'; 
        set.maxOperationalYears = '5';  

        % Inverter Default Parameters
        set.invEfficiency = '90';
        
        % Indata Filenames
        set.LoadProfileData = 'LoadCurve_normalized_single_3percent_100.mat';
        set.IrradiationData = 'solar_data_Phuntsholing_baseline.mat';
        set.TemperatureData = 'surface_temp_phuent_2004_hour.mat';
        set.DataSetFolderName = 'bhutan';

    end
end

% returns the path of the preset folder (where presets are stored)
function presetsPath = get_presets_path
       filename = mfilename();
       localPath = mfilename('fullpath');
       localPath = localPath(1:end-length(filename));
       operating_system = getenv('OS');
       if strcmp(operating_system(1:7), 'Windows')
           presetsPath = strcat(localPath, 'presets\');         
       else
           presetsPath = strcat(localPath, 'presets/');
       end
end

function [SimParam, EcoParam, PvParam, BattParam, InvParam, SimData] = ...
         init_parameter_classes(set)
    SimParam = SimulationParameters(  str2double(set.pvStartKw),...
                                    str2double(set.pvStopKw),...
                                    str2double(set.pvStepKw),...
                                    str2double(set.battStartKwh),...
                                    str2double(set.battStopKwh),...
                                    str2double(set.battStepKwh),...
                                    str2double(set.llpAccept)/100,...
                                    str2double(set.llpStart)/100,...
                                    str2double(set.llpStop)/100,...
                                    str2double(set.llpStep)/100);
                                
    EcoParam = EconomicParameters;
    EcoParam.Budget = str2double(set.budget);
    EcoParam.PvCost = str2double(set.pvCostKw);        
    EcoParam.BattCost = str2double(set.battCostKwh);             
    EcoParam.BattCostFix= str2double(set.battCostFixed);             
    EcoParam.InverterCost = str2double(set.inverterCostKw);         
    EcoParam.OperationMaintenanceCost = str2double(set.operationMaintenanceCostKw);
    EcoParam.InstallBalanceOfSystemCos = str2double(set.installBalanceOfSystemCost)/100;
    EcoParam.PlantLifetime = str2double(set.plantLifetime);
    EcoParam.InterestRate = str2double(set.interestRate)/100; 

    PvParam.BalanceOfSystem = str2double(set.balanceOfSystem)/100;            
    PvParam.NominalAmbientTemp = str2double(set.nominalAmbientTemperatureC);              
    PvParam.NominalCellTemp = str2double(set.nominalCellTemperatureC);              
    PvParam.NominalIrradiation = str2double(set.nominalIrradiation);             
    PvParam.PowerDerateDueTemp = str2double(set.powerDerateDueTemperature); 
    
    BattParam = BatteryParameters;
    BattParam.MinStateOfCharge = str2double(set.minStateOfCharge)/100;            
    BattParam.InitialStateOfCharge = str2double(set.initialStateOfCharge)/100;            
    BattParam.ChargingEfficiency = str2double(set.chargingEfficiency)/100;             
    BattParam.DischargingEfficiency = str2double(set.dischargingEfficiency)/100;             
    BattParam.PowerEnergyRatio = str2double(set.powerEnergyRatio);              
    BattParam.MaxOperationalYears = str2double(set.maxOperationalYears);   
    
    InvParam.InvEfficiency = (set.invEfficiency)/100; 
    
    SimData = SimulationInputData( set.LoadProfileData,...
                                   set.IrradiationData,...
                                   set.TemperatureData,...
                                   set.DataSetFolderName);

   
end


